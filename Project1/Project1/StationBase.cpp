///////////////////////////////////////////////////////////////////////////////
// Project: ECE 578 Project 1 The Distributed Coordination function (DCF) of 802.11
// Author: Dillon Gregerson
// Originated: 10/10/2020
///////////////////////////////////////////////////////////////////////////////
#include "StationBase.hpp"

///////////////////////////////////////////////////////////////////////////////
// @brief contructor
// @params unsigned long stationId
// @return N/A
///////////////////////////////////////////////////////////////////////////////
StationBase::StationBase(unsigned long stationId):stationId_(stationId)
{

}

///////////////////////////////////////////////////////////////////////////////
// @brief destructor
// @params void
// @return N/A
///////////////////////////////////////////////////////////////////////////////
StationBase::~StationBase(void)
{

}

///////////////////////////////////////////////////////////////////////////////
// @brief get the Station's name
// @params void
// @return std::string stationName_
///////////////////////////////////////////////////////////////////////////////
std::string StationBase::getStationName(void) const
{
	return stationName_;
}

///////////////////////////////////////////////////////////////////////////////
// @brief returns the station's id
// @params void
// @return stationId_
///////////////////////////////////////////////////////////////////////////////
long StationBase::getStationId(void) const
{
	return stationId_;
}

///////////////////////////////////////////////////////////////////////////////
// @brief listen for signals on the endpoint
// @params void
// @return void
///////////////////////////////////////////////////////////////////////////////
void StationBase::listen(void)
{

}

///////////////////////////////////////////////////////////////////////////////
// @brief take action based on the chosen protocol
// @params void
// @return void
///////////////////////////////////////////////////////////////////////////////
void StationBase::takeAction(void)
{
}

///////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////